name: CI

on:
  workflow_call:
    secrets:
      GH_TOKEN:
        required: true
      GH_PAT:
        required: true
      CODECOV_TOKEN:
        required: true

jobs:
  codestyle-tests:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'NO_CI')"
    steps:
    - name: Checkout Repository
      uses: actions/checkout@main
      with:
        fetch-depth: 1
    - name: Checkout Build Repository
      uses: actions/checkout@main
      with:
          fetch-depth: 1
          ref: develop
          repository: Karaka-Management/Build
          path: Build
    - name: Install NPM
      uses: actions/setup-node@v3
      with:
        node-version: '14'
        cache: 'npm'
    - name: Cache dependencies
      id: npm-cache
      run: |
        echo "::set-output name=dir::$(npm config get cache)"
    - uses: actions/cache@v2
      with:
        path: ${{ steps.npm-cache.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node
    - run: npm install
    - name: eslint
      run: npx eslint ./ -c Build/Config/.eslintrc.json --fix
    - name: Check for modified files
      if: always()
      id: git-format-check
      run: echo "modified=$(if git diff-index -G --quiet HEAD --; then echo "false"; else echo "true"; fi)" >> $GITHUB_OUTPUT
    - name: Push changes
      if: steps.git-format-check.outputs.modified == 'true'
      run: |
        git config --global user.name 'Formatter Bot'
        git config --global user.email 'formatter.bot@jingga.app'
        git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}
        git commit -am "Automated formatting changes (NO_CI)"
        git push
  code-tests:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'NO_CI')"
    steps:
    - name: Checkout Repository
      uses: actions/checkout@main
      with:
        fetch-depth: 1
    - name: Checkout Build Repository
      uses: actions/checkout@main
      with:
          fetch-depth: 1
          ref: develop
          repository: Karaka-Management/Build
          path: Build
    - name: Install NPM
      uses: actions/setup-node@v3
      with:
        node-version: '14'
        cache: 'npm'
    - run: npm install
    - name: jasmine
      run: |
        chmod +x Build/Config/jasmine_build.sh
        Build/Config/jasmine_build.sh
        npx jasmine --config=Build/Config/jasmine.json